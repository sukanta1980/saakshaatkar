What is the difference between git fetch and git pull
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

git fetch downloads commits, files, and refs from a remote repository into your local repository, but it does not modify your working directory or current branch.

git pull is a combination of git fetch followed by git merge. It fetches changes from a remote repository and then merges them into your current branch.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How do you resolve conflicts in a pull request on Bitbucket?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Fetch the latest changes from the remote repository: git fetch origin master
Merge the fetched changes into your current branch : git merge FETCH_HEAD
Resolve the conflicts manually : Open the conflicting files in a text editor, Look for conflict markers (<<<<<<, ======, >>>>>>).
Stage the resolved files : git stage helm-charts/atropos-operator/Chart.yaml or git add path/to/conflicted/file
Commit the resolved changes : git commit -m "OSRE-299:Added code to create roles for audit center"
Push the resolved changes to the remote repository : git push
Check the status to ensure everything is clean : git status
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How do you revert a commit in Git?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

git revert <commit_hash>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How do you delete a branch in Git?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Delete a local branch
git branch -d <branch_name>

# Delete a remote branch
git push origin --delete <branch_name>

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How can you list all the branches in a Git repository?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# List local branches
git branch

# List remote branches
git branch -r

# List all branches (local and remote)
git branch -a

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

What is the difference between git rebase and git merge?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

You checkout the target branch.
You run git merge source_branch to initiate the merge process.
Git attempts to automatically combine the changes from both branches.
If there are conflicts (overlapping changes), Git will halt and ask you to manually resolve them by editing the files.
Once conflicts are resolved and staged, you commit the merge with a meaningful message.

You checkout the source branch.
You run git rebase target_branch to initiate the rebasing process.
Git replays each commit from the source branch onto the target branch.
If there are conflicts during replay (similar to merge conflicts), Git pauses and requires you to resolve them manually.
Once conflicts are fixed and staged, you continue the rebase process with git rebase --continue.
The source branch is updated to point to the new commit history.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How do you stash changes in Git?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

git stash
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

What are Bitbucket Pipelines?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Bitbucket Pipelines is a CI/CD service integrated into Bitbucket. It allows you to automatically build, test, and deploy your code based on configurations defined in a bitbucket-pipelines.yml file in your repository.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How do you view the commit history in Git?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

git log
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How do you undo the last commit in Git?
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Undo the last commit but keep the changes in the working directory
git reset --soft HEAD~1

# Undo the last commit and discard the changes
git reset --hard HEAD~1
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

how to push a perticular commit
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
git push origin <commit-hash>:<branch-name>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
